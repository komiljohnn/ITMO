-- =======================================================================================================================================
-- 1.
-- Сделать запрос для получения атрибутов из указанных таблиц,
-- применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_СЕССИЯ.УЧГОД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ОТЧЕСТВО = Александрович.
-- b) Н_СЕССИЯ.УЧГОД = 2008/2009.
-- Вид соединения: RIGHT JOIN.

select Н_ЛЮДИ.ИМЯ, Н_СЕССИЯ.УЧГОД
from Н_СЕССИЯ
right join Н_ЛЮДИ on Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
where Н_ЛЮДИ.ОТЧЕСТВО = 'Александрович'
and (Н_СЕССИЯ.УЧГОД = '2008/2009');
-- =======================================================================================================================================

-- =======================================================================================================================================
-- 2. 
-- Сделать запрос для получения атрибутов из указанных таблиц,
-- применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
-- Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_ОБУЧЕНИЯ.ЧЛВК_ИД, Н_УЧЕНИКИ_ИД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ОТЧЕСТВО = Александрович.
-- b) Н_ОБУЧЕНИЯ.НЗК > 001000.
-- c) Н_УЧЕНИКИ.ГРУППА <5100.
-- Вид соединения: INNER JOIN.

select Н_ЛЮДИ.ОТЧЕСТВО, Н_ОБУЧЕНИЯ.ЧЛВК_ИД, Н_УЧЕНИКИ.ИД
from Н_ЛЮДИ
inner join Н_ОБУЧЕНИЯ on Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
inner join Н_УЧЕНИКИ on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
where Н_ЛЮДИ.ОТЧЕСТВО = 'Александрович'
and Н_ОБУЧЕНИЯ.НЗК > '001000'
and Н_УЧЕНИКИ.ГРУППА <'5100';
-- =======================================================================================================================================

-- =======================================================================================================================================
-- 3.
-- Составить запрос, который ответит на вопрос, есть ли среди студентов группа 3102, кто не имеет отчества.

select Н_УЧЕНИКИ.ГРУППА, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО
from Н_УЧЕНИКИ
join Н_ЛЮДИ on Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
where Н_УЧЕНИКИ.ГРУППА = '3102'
and Н_ЛЮДИ.ОТЧЕСТВО = '.'; -- у некоторых студентов в колонке ОТЧЕСТВО стоит '.', если это означает отсутствие отчества тогда нужно поменять на Н_ЛЮДИ.ОТЧЕСТВО = '.'

-- =======================================================================================================================================

-- ======================================================================================================================================
-- 4. 
-- Найти группы в которых в 2011 году было ровно 5 обучающихся студентов на ФКТИУ.
-- Для реализации использовать соединение таблиц

select Н_УЧЕНИКИ.ГРУППА from Н_УЧЕНИКИ
join Н_ПЛАНЫ on Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
    and Н_ПЛАНЫ.УЧЕБНЫЙ_ГОД = '2010/2011'
join Н_ОТДЕЛЫ on Н_ОТДЕЛЫ.ИД = Н_ПЛАНЫ.ОТД_ИД
    and Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ'
group by Н_УЧЕНИКИ.ГРУППА
having count(Н_УЧЕНИКИ.ИД) = 5;
-- =======================================================================================================================================

-- =======================================================================================================================================
-- 5.
-- Выведите таблицу со средними оценками студентов группы 4100(Номер, ФИО, Ср_оценка), у которых средняя оценка больше максимальной оценки в группе 1100.

select Н_ВЕДОМОСТИ.ЧЛВК_ИД,
    avg(case 
            when (ОЦЕНКА not in ('зачет', 'неявка', 'незач', 'осв')) then cast (ОЦЕНКА AS INTEGER) 
        END) as СР_ОЦЕНКА, Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО
    from Н_ВЕДОМОСТИ
        join Н_УЧЕНИКИ on Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
        join Н_ЛЮДИ on Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
        where ГРУППА = '4100'
group by Н_ВЕДОМОСТИ.ЧЛВК_ИД, ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО
having avg( case 
                when (ОЦЕНКА not in ('зачет', 'неявка', 'незач', 'осв')) then cast (ОЦЕНКА AS INTEGER) 
            END) >
        (select max(case
                        when (ОЦЕНКА not in ('зачет', 'неявка', 'незач', 'осв')) then cast (ОЦЕНКА AS INTEGER) 
                    END)
        from Н_ВЕДОМОСТИ
            join Н_УЧЕНИКИ on Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
            where Н_УЧЕНИКИ.ГРУППА = '1100');
-- =======================================================================================================================================

-- =======================================================================================================================================
-- 6.
-- Получить список студентов, отчисленных ровно первого сентября 2012 года с
-- очной формы обучения. В результат включить:
-- номер группы; 
-- номер, фамилию, имя и отчество студента. 
-- номер пункта приказа;    
-- Для реализации использовать подзапрос с EXISTS. 

select Н_УЧЕНИКИ.ГРУППА,
       Н_УЧЕНИКИ.ИД,
       Н_ЛЮДИ.ФАМИЛИЯ,
       Н_ЛЮДИ.ИМЯ,
       Н_ЛЮДИ.ОТЧЕСТВО, 
       Н_УЧЕНИКИ.П_ПРКОК_ИД     
from Н_УЧЕНИКИ 
    join Н_ЛЮДИ on Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
    join Н_ПЛАНЫ on Н_ПЛАНЫ.ИД = Н_УЧЕНИКИ.ПЛАН_ИД
    join Н_ФОРМЫ_ОБУЧЕНИЯ on Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
    and Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная'
where exists(
    select *
    from Н_УЧЕНИКИ
    where Н_УЧЕНИКИ.ПРИЗНАК = 'очисл'
    and date(Н_УЧЕНИКИ.КОНЕЦ_ПО_ПРИКАЗУ) = '2012-09-01'
);
-- =======================================================================================================================================

-- =======================================================================================================================================
-- 7.
-- Вывести список студентов, имеющих одинаковые имена, но не совпадающие ид.
select Н_УЧЕНИКИ.ГРУППА,
       Н_ЛЮДИ.ИД,
       Н_ЛЮДИ.ИМЯ
from Н_УЧЕНИКИ
  join Н_ЛЮДИ on Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
where Н_ЛЮДИ.ИМЯ = ANY (select Н_ЛЮДИ.ИМЯ from Н_ЛЮДИ)
and Н_ЛЮДИ.ИД != ANY (select Н_УЧЕНИКИ.ИД from Н_УЧЕНИКИ);
-- =======================================================================================================================================
